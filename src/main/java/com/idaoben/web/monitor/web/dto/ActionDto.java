package com.idaoben.web.monitor.web.dto;

import com.idaoben.utils.dto_assembler.annotation.EnableAssembling;
import com.idaoben.utils.dto_assembler.annotation.Mapping;
import com.idaoben.utils.dto_assembler.annotation.TypeMapping;
import com.idaoben.web.monitor.dao.entity.Action;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.ZonedDateTime;

/**
*
* 应用行为 Dto接口
* Generated by DAOBEN CODE GENERATOR
* @author  Daoben Code Generator
*/
@ApiModel
@EnableAssembling(mappings = @TypeMapping(from = Action.class))
public interface ActionDto {

    @ApiModelProperty("唯一标识符")
    @Mapping
    String getUuid();

    @ApiModelProperty("日志时间戳")
    @Mapping
    ZonedDateTime getTimestamp();

    @ApiModelProperty("本日志行是否有对应的附件")
    @Mapping
    Boolean getWithAttachment();

    @ApiModelProperty("关联的任务ID")
    @Mapping
    Long getTaskId();

    @ApiModelProperty("进程ID")
    @Mapping
    String getPid();

    @ApiModelProperty("行为类型")
    @Mapping
    Integer getType();

    @ApiModelProperty("网络套接字描述符")
    @Mapping
    String getSocketFd();

    @ApiModelProperty("目标主机")
    @Mapping
    String getHost();

    @ApiModelProperty("目标端口")
    @Mapping
    Integer getPort();

    @ApiModelProperty("参考字段")
    @Mapping
    String getRef();

    @ApiModelProperty("数据包大小")
    @Mapping
    Long getBytes();

    @ApiModelProperty("文件路径")
    @Mapping
    String getPath();

    @ApiModelProperty("打开文件时要求的访问权限")
    @Mapping
    String getAccess();

    @ApiModelProperty("文件是否普通文件")
    @Mapping
    Boolean getGeneralFile();

    @ApiModelProperty("备份目录 ")
    @Mapping
    String getBackup();

    @ApiModelProperty("文件描述符")
    @Mapping
    String getFd();

    @ApiModelProperty("写入数据偏移量")
    @Mapping
    Long getOffset();

    @ApiModelProperty("注册表父键")
    @Mapping
    String getParent();

    @ApiModelProperty("注册表目标")
    @Mapping
    String getKey();

    @ApiModelProperty("值键")
    @Mapping
    String getValueName();

    @ApiModelProperty("值键类型")
    @Mapping
    String getValueType();

    @ApiModelProperty("值键值")
    @Mapping
    String getData();

    @ApiModelProperty("值键原类型")
    @Mapping
    String getOldValueType();

    @ApiModelProperty("值键原有值")
    @Mapping
    String getOldData();

    @ApiModelProperty("启动进程的完整命令行数据")
    @Mapping
    String getCommandLine();
}